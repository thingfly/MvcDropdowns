@model WebApplication6.Models.PostWholeFormExampleViewModel

@*I've left minimal boostrap in to make it a bit easier on the eye (with the default form layout). But note that I'm not doing anything special.*@
<div class="row">
    <div class="col-md-12">
       @using (Html.BeginForm())
       {
        <div class="form-group">
            @Html.LabelFor(m => m.Message)
            @Html.TextBoxFor(m => m.Message)
        </div>
            <div class="form-group">
                @Html.LabelFor(m => m.People)
                @* 
                    This syntax always seems a bit confusing. The first bit is a lambda that gets the property
                    on the model that holds the selected Id. The 2nd bit is the list of SelectListItems that you
                    can choose. When you do a POST the .Value property is saved in the model's property from the 1st lambda.
                    Note that the 2nd property isn't a lamda as, in theory, you can get the list of items from anywhere."Model" refers to the
                    viewmodel that the razor view has access to. Be carful not to use "model" (with a little m) as this is a keyword.
                  *@
                @Html.DropDownListFor(m => m.SelectedPersonId, Model.People)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Pets)
                @Html.DropDownListFor(m => m.SelectedFavouritePetId, Model.Pets)
            </div>
       }
    </div>
</div>

@*Haing the JavaScript in the html file is bad practice. It would normally go in a seperate file...*@
@section scripts
{
    <script type="text/javascript">
        // This function thing is the standard way to start using JQuery stuff
        $(function () {
            // This makes form post when you change any of the dropdowns
            $("select").change(function() {
                $("form").submit();
            });
        });
    </script>
}